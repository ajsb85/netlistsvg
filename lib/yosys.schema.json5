{
  "description": "JSON Schema for Yosys netlists in JSON format",
  "type": "object",
  "required": ["modules"],
  "errorMessage": {
    "type": "Netlist must be a JSON object",
    "required": "Netlist must have a 'modules' property"
  },
  "properties": {
    "modules": {
      "type": "object",
      "minProperties": 1,
      "errorMessage": {
        "type": "'modules' must be an object",
        "minProperties": "Netlist must have at least one module defined in 'modules'"
      },
      "additionalProperties": {
        "type": "object",
        "required": ["ports"],
        "anyOf": [
            { "required": ["ports"] },
            { "required": ["cells"] }
        ],
        "errorMessage": {
            "required": "Each module must have 'ports' defined.",
            "anyOf": "Module must have either 'ports' or 'cells' defined."
        },
        "properties": {
          "ports": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "required": ["direction", "bits"],
              "errorMessage": {
                "type": "Each port must be an object",
                "required": "Each port must have 'direction' and 'bits' properties"
              },
              "properties": {
                "direction": {
                  "type": "string",
                  "enum": ["input", "output", "inout"],
                  "errorMessage": {
                    "type": "Port 'direction' must be a string",
                    "enum": "Port 'direction' must be one of: 'input', 'output', 'inout'"
                  }
                },
                "bits": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      { "type": "integer", "minimum": 0 },
                      { "type": "string", "enum": ["0", "1", "x", "z"] }
                    ],
                    "errorMessage": {
                      "oneOf": "Each bit must be a non-negative integer or one of '0', '1', 'x', 'z'"
                    }
                  },
                  "errorMessage": {
                    "type": "Port 'bits' must be an array"
                  }
                }
              }
            }
          },
          "cells": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "required": ["type", "connections"],
              "errorMessage": {
                "type": "Each cell must be an object",
                "required": "Each cell must have 'type' and 'connections' properties"
              },
              "properties": {
                "type": {
                  "type": "string",
                  "errorMessage": {
                    "type": "Cell 'type' must be a string"
                  }
                },
                "connections": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        { "type": "integer", "minimum": 0 },
                        { "type": "string", "enum": ["0", "1", "x", "z"] }
                      ],
                      "errorMessage": {
                        "oneOf": "Each connection bit must be a non-negative integer or one of '0', '1', 'x', 'z'"
                      }
                    },
                    "errorMessage": {
                      "type": "Cell connections must be arrays",
                      "items": "Invalid connection bit type"
                    }
                  },
                  "errorMessage": {
                    "type": "Cell 'connections' must be an object",
                    "additionalProperties": "Invalid cell connection format"
                  }
                },
                "port_directions": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string",
                    "enum": ["input", "output", "inout"],
                    "errorMessage": {
                        "type": "Port directions must be strings",
                        "enum": "'port_directions' values must be one of: 'input', 'output', 'inout'"
                    }
                  },
                  "errorMessage": {
                    "type": "'port_directions' must be an object"
                  }
                },
                "hide_name": {
                  "type": "integer",
                  "enum": [0, 1],
                  "errorMessage": {
                    "type": "'hide_name' must be an integer",
                    "enum": "'hide_name' must be 0 or 1"
                  }
                },
                "parameters": {
                  "type": "object",
                    "errorMessage": {
                      "type": "'parameters' must be a object"
                    }
                },
                "attributes": {
                  "type": "object",
                  "errorMessage": {
                    "type": "'attributes' must be an object"
                  }
                }
              },
               "additionalProperties": false
            }
          },
          "netnames": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "required": ["bits"],
              "properties": {
                "bits": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      { "type": "integer", "minimum": 0 },
                      { "type": "string", "enum": ["0", "1", "x", "z"] }
                    ]
                  }
                },
                "hide_name": {
                  "type": "integer",
                  "enum": [0, 1]
                },
                "attributes": {
                  "type": "object"
                }
              },
              "additionalProperties": false
            }
          },
          "attributes": {
            "type": "object",
             "properties": {
                "top": {
                  "type": ["integer", "string"],
                  "oneOf": [
                    { "type": "integer", "enum": [0, 1]},
                    { "type": "string", "enum": ["00000000000000000000000000000000", "00000000000000000000000000000001"]}
                  ],
                  "errorMessage":{
                    "oneOf": "Top values must be either 0 or 1, or \"0000000000000000000000000000000{0,1}\""
                  }

                }
              },
              "additionalProperties": false
          }
        },
        "additionalProperties": false,
      }
    }
  },
  "additionalProperties": false
}